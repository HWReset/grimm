git:
  depth: false

matrix:
  include:

###############################################################################
# OSX Debug
###############################################################################

    - os: osx
      language: cpp
      osx_image: xcode9.3
      install:
        - export TZ=Etc/GMT-3
        - brew update
        - brew unlink cmake
        - brew unlink boost
        - brew install qt5 cmake boost
        - brew link qt5 --force
        - export PATH=/usr/local/opt/qt/bin:$PATH
        - export OPENSSL_ROOT_DIR="/usr/local/opt/openssl"
      env:
        - BUILD_TYPE=Debug
        - OS_FOLDER=mac
      script:
        - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBRANCH_NAME=$TRAVIS_BRANCH . && make -j 4 && ctest --verbose && cpack;
        # extract build version
        - GRIMM_VERSION="$(cat grimm_version.gen)" && rm grimm_version.gen
        - echo GRIMM_VERSION = $GRIMM_VERSION
        - export GRIMM_WALLET_UI_IN="GrimmWallet$GRIMM_DISPLAY_SUFFIX-$GRIMM_VERSION-Darwin.dmg"
        - export GRIMM_WALLET_UI_OUT="Grimm-Wallet$GRIMM_DISPLAY_SUFFIX2-$GRIMM_VERSION.dmg"
        - export GRIMM_WALLET_UI_OUT_VERLESS="Grimm-Wallet$GRIMM_DISPLAY_SUFFIX2.dmg"

###############################################################################
# OSX Release
###############################################################################

    - os: osx
      language: cpp
      osx_image: xcode9.3
      install:
        - export TZ=Etc/GMT-3
        - brew update
        - brew unlink cmake
        - brew unlink boost
        - brew install cmake boost
        - sudo git clone --depth=1 https://github.com/nesbox/qt5-static-mac.git /usr/local/qt5-static
        - export PATH=/usr/local/qt5-static/bin:$PATH
        - export OPENSSL_ROOT_DIR="/usr/local/opt/openssl"
        - export QT5_ROOT_DIR="/usr/local/qt5-static"
        - export QML_IMPORT_PATH="/usr/local/qt5-static/qml"
        - openssl aes-256-cbc -K $encrypted_1f9ebee66ea9_key -iv $encrypted_1f9ebee66ea9_iv -in macos_cert.enc -out macos_cert.tar -d
        - tar xvf macos_cert.tar
        # create custom keychain
        - security create-keychain -p travis macos-build.keychain
        - security default-keychain -s macos-build.keychain
        - security unlock-keychain -p travis macos-build.keychain
        - security set-keychain-settings -t 3600 -l ~/Library/Keychains/macos-build.keychain
        # import certificates
        - security import distkey.p12 -P $MACOS_DISTRIBUTION_KEY_PASSWORD  -k ~/Library/Keychains/macos-build.keychain -T /usr/bin/codesign
        - security import devapp.cer -k ~/Library/Keychains/macos-build.keychain -T /usr/bin/codesign
        - security set-key-partition-list -S "apple-tool:,apple:" -s -k travis macos-build.keychain
      env:
        - BUILD_TYPE=Release
        - OS_FOLDER=mac
      script:
        - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DDEBUG_MESSAGES_IN_RELEASE_MODE=On -DGRIMM_LINK_TYPE=Static -DBRANCH_NAME=$TRAVIS_BRANCH -DGRIMM_SIGN_MACOS_BINARY=On . && make -j 4 && ctest --verbose && cpack;
        # extract build version
        - GRIMM_VERSION="$(cat grimm_version.gen)" && rm grimm_version.gen
        - echo GRIMM_VERSION = $GRIMM_VERSION
        - export GRIMM_WALLET_UI_IN="GrimmWallet$GRIMM_DISPLAY_SUFFIX-$GRIMM_VERSION-Darwin.dmg"
        - export GRIMM_WALLET_UI_OUT="Grimm-Wallet$GRIMM_DISPLAY_SUFFIX2-$GRIMM_VERSION.dmg"
        - export GRIMM_WALLET_UI_OUT_VERLESS="Grimm-Wallet$GRIMM_DISPLAY_SUFFIX2.dmg"
        # sign our builds
        - codesign --force --deep --sign "$MACOS_SIGN_IDENTITY" grimm/grimm-node$GRIMM_TARGET_SUFFIX
        - codesign --force --deep --sign "$MACOS_SIGN_IDENTITY" wallet/grimm-wallet$GRIMM_TARGET_SUFFIX
        - codesign --force --deep --sign "$MACOS_SIGN_IDENTITY" wallet/wallet-api$GRIMM_TARGET_SUFFIX
        - codesign --force --deep --sign "$MACOS_SIGN_IDENTITY" explorer/explorer-node$GRIMM_TARGET_SUFFIX
        - codesign --force --deep --sign "$MACOS_SIGN_IDENTITY" $GRIMM_WALLET_UI_IN

###############################################################################
# Linux Debug
###############################################################################

    - os: linux
      language: cpp
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - libssl-dev
            - curl
      install:
        - export TZ=Etc/GMT-3
        # install new version cmake
        - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
        - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
        - travis_retry wget --no-check-certificate https://github.com/Kitware/CMake/releases/download/v3.14.0/cmake-3.14.0-Linux-x86_64.tar.gz
        - tar -xvf cmake-3.14.0-Linux-x86_64.tar.gz > /dev/null
        - mv cmake-3.14.0-Linux-x86_64 cmake-install
        - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
        - cd ${TRAVIS_BUILD_DIR}
        - cmake --version
        - sudo git clone --depth=1 https://github.com/freenetcoder/boost-linux.git /usr/local/boost_1_69_0
        - export BOOST_ROOT="/usr/local/boost_1_69_0"
        - sudo add-apt-repository ppa:beineri/opt-qt-5.10.1-trusty -y
        - sudo apt-get update
        - sudo apt-get install qt510declarative qt510svg libgl1-mesa-dev-lts-xenial
        - eval "CC=gcc-7 && CXX=g++-7"
        - export PATH=/opt/qt510/bin:$PATH
      env:
        - BUILD_TYPE=Debug
        - OS_FOLDER=linux
      script:
        - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBRANCH_NAME=$TRAVIS_BRANCH . && make -j 4 && ctest --verbose && cpack;
        # extract build version
        - GRIMM_VERSION="$(cat grimm_version.gen)" && rm grimm_version.gen
        - echo GRIMM_VERSION = $GRIMM_VERSION
        - export GRIMM_WALLET_UI_IN="GrimmWallet$GRIMM_DISPLAY_SUFFIX-$GRIMM_VERSION-Linux.deb"
        - export GRIMM_WALLET_UI_OUT="Grimm-Wallet$GRIMM_DISPLAY_SUFFIX2-$GRIMM_VERSION.deb"
        - export GRIMM_WALLET_UI_OUT_VERLESS="Grimm-Wallet$GRIMM_DISPLAY_SUFFIX2.deb"
###############################################################################
# Linux Release
###############################################################################

    - os: linux
      language: cpp
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - libssl-dev
            - curl
            - libxi-dev
            - libcups2-dev
      install:
        - export TZ=Etc/GMT-3
        # install new version cmake
        - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
        - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
        - travis_retry wget --no-check-certificate https://github.com/Kitware/CMake/releases/download/v3.14.0/cmake-3.14.0-Linux-x86_64.tar.gz
        - tar -xvf cmake-3.14.0-Linux-x86_64.tar.gz > /dev/null
        - mv cmake-3.14.0-Linux-x86_64 cmake-install
        - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
        - cd ${TRAVIS_BUILD_DIR}
        - cmake --version
        - sudo git clone --depth=1 https://github.com/freenetcoder/boost-linux.git /usr/local/boost_1_69_0
        - export BOOST_ROOT="/usr/local/boost_1_69_0"
        - eval "CC=gcc-7 && CXX=g++-7"
        - git clone --depth=1 https://github.com/nesbox/qt5-static-linux.git /home/travis/qt5-static
        - export QT5_ROOT_DIR="/home/travis/qt5-static"
        - export QML_IMPORT_PATH="/home/travis/qt5-static/qml"
      env:
        - BUILD_TYPE=Release
        - OS_FOLDER=linux
      script:
        - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DDEBUG_MESSAGES_IN_RELEASE_MODE=On -DGRIMM_LINK_TYPE=Static -DBRANCH_NAME=$TRAVIS_BRANCH .
        - make -j 4
        - ctest --verbose
        - cpack
        # extract build version
        - GRIMM_VERSION="$(cat grimm_version.gen)" && rm grimm_version.gen
        - echo GRIMM_VERSION = $GRIMM_VERSION
        - export GRIMM_WALLET_UI_IN="GrimmWallet$GRIMM_DISPLAY_SUFFIX-$GRIMM_VERSION-Linux.deb"
        - export GRIMM_WALLET_UI_OUT="Grimm-Wallet$GRIMM_DISPLAY_SUFFIX2-$GRIMM_VERSION.deb"
        - export GRIMM_WALLET_UI_OUT_VERLESS="Grimm-Wallet$GRIMM_DISPLAY_SUFFIX2.deb"

###############################################################################
# Android x86 Release
###############################################################################

    - os: linux
      language: android
      env:
        - ANDROID_ABI=x86
        - BUILD_TYPE=Release
        - ANDROID_SDK_VERSION=23
      android:
        components:
          - tools
          - platform-tools
          - android-23
      install:
        - echo y | sdkmanager "ndk-bundle"
        - wget "https://cmake.org/files/v3.12/cmake-3.12.0-Linux-x86_64.sh"
        - sudo sh cmake-3.12.0-Linux-x86_64.sh --skip-license --prefix=/usr
        - sudo git clone --depth=1 https://github.com/freenetcoder/boost-android.git /usr/local/boost_1_68-android
        - sudo git clone --depth=1 https://github.com/freenetcoder/openssl-android.git /usr/local/Prebuilt-OpenSSL-Android
        - export ANDROID_NDK_HOME=$ANDROID_HOME/ndk-bundle
        - export BOOST_ROOT_ANDROID=/usr/local/boost_1_68-android
        - export OPENSSL_ROOT_DIR_ANDROID=/usr/local/Prebuilt-OpenSSL-Android
        - export PATH=$ANDROID_NDK_HOME:$PATH
      script:
        - cmake -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake -DANDROID_NATIVE_API_LEVEL=$ANDROID_SDK_VERSION -DANDROID_ABI=$ANDROID_ABI -DCMAKE_BUILD_TYPE=$BUILD_TYPE .
        - make wallet-jni -j4
      after_success:
        # extract build version
        - GRIMM_VERSION="$(cat grimm_version.gen)" && rm grimm_version.gen
        - echo GRIMM_VERSION = $GRIMM_VERSION
        - BUILDS_SERVER_PATH=${BUILD_SERVER}/files/$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$BUILD_TYPE/android-$ANDROID_ABI
        - BUILDS_SERVER_LATEST_PATH=${BUILD_SERVER}/files/$TRAVIS_BRANCH/latest/$BUILD_TYPE/android-$ANDROID_ABI
        - tar -cvzf libwallet-jni-$GRIMM_VERSION.tar.gz --directory=$HOME/build/grimm/grimm/android libwallet-jni.so com
        - tar -cvzf libwallet-jni.tar.gz --directory=$HOME/build/grimm/grimm/android libwallet-jni.so com
        - curl --retry 3 --ftp-create-dirs -T libwallet-jni-$GRIMM_VERSION.tar.gz $BUILDS_SERVER_PATH/
        - curl --retry 3 --ftp-create-dirs -T libwallet-jni.tar.gz $BUILDS_SERVER_LATEST_PATH/
        - artifacts upload --target-paths "$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$BUILD_TYPE/android-$ANDROID_ABI/" libwallet-jni-$GRIMM_VERSION.tar.gz
        - artifacts upload --target-paths "$TRAVIS_BRANCH/latest/$BUILD_TYPE/android-$ANDROID_ABI/" libwallet-jni.tar.gz

###############################################################################
# Android x86_64 Release
###############################################################################

    - os: linux
      language: android
      env:
        - ANDROID_ABI=x86_64
        - BUILD_TYPE=Release
        - ANDROID_SDK_VERSION=23
      android:
        components:
          - tools
          - platform-tools
          - android-23
      install:
        - echo y | sdkmanager "ndk-bundle"
        - wget "https://cmake.org/files/v3.12/cmake-3.12.0-Linux-x86_64.sh"
        - sudo sh cmake-3.12.0-Linux-x86_64.sh --skip-license --prefix=/usr
        - sudo git clone --depth=1 https://github.com/freenetcoder/boost-android.git /usr/local/boost_1_68-android
        - sudo git clone --depth=1 https://github.com/freenetcoder/openssl-android.git /usr/local/Prebuilt-OpenSSL-Android
        - export ANDROID_NDK_HOME=$ANDROID_HOME/ndk-bundle
        - export BOOST_ROOT_ANDROID=/usr/local/boost_1_68-android
        - export OPENSSL_ROOT_DIR_ANDROID=/usr/local/Prebuilt-OpenSSL-Android
        - export PATH=$ANDROID_NDK_HOME:$PATH
      script:
        - cmake -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake -DANDROID_NATIVE_API_LEVEL=$ANDROID_SDK_VERSION -DANDROID_ABI=$ANDROID_ABI -DCMAKE_BUILD_TYPE=$BUILD_TYPE .
        - make wallet-jni -j4
      after_success:
        # extract build version
        - GRIMM_VERSION="$(cat grimm_version.gen)" && rm grimm_version.gen
        - echo GRIMM_VERSION = $GRIMM_VERSION
        - BUILDS_SERVER_PATH=${BUILD_SERVER}/files/$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$BUILD_TYPE/android-$ANDROID_ABI
        - BUILDS_SERVER_LATEST_PATH=${BUILD_SERVER}/files/$TRAVIS_BRANCH/latest/$BUILD_TYPE/android-$ANDROID_ABI
        - tar -cvzf libwallet-jni-$GRIMM_VERSION.tar.gz --directory=$HOME/build/grimm/grimm/android libwallet-jni.so com
        - tar -cvzf libwallet-jni.tar.gz --directory=$HOME/build/grimm/grimm/android libwallet-jni.so com
        - curl --retry 3 --ftp-create-dirs -T libwallet-jni-$GRIMM_VERSION.tar.gz $BUILDS_SERVER_PATH/
        - curl --retry 3 --ftp-create-dirs -T libwallet-jni.tar.gz $BUILDS_SERVER_LATEST_PATH/
        - artifacts upload --target-paths "$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$BUILD_TYPE/android-$ANDROID_ABI/" libwallet-jni-$GRIMM_VERSION.tar.gz
        - artifacts upload --target-paths "$TRAVIS_BRANCH/latest/$BUILD_TYPE/android-$ANDROID_ABI/" libwallet-jni.tar.gz

###############################################################################
# Android ARMv7 Release
###############################################################################

    - os: linux
      language: android
      env:
        - ANDROID_ABI=armeabi-v7a
        - BUILD_TYPE=Release
        - ANDROID_SDK_VERSION=23
      android:
        components:
          - tools
          - platform-tools
          - android-23
      install:
        - echo y | sdkmanager "ndk-bundle"
        - wget "https://cmake.org/files/v3.12/cmake-3.12.0-Linux-x86_64.sh"
        - sudo sh cmake-3.12.0-Linux-x86_64.sh --skip-license --prefix=/usr
        - sudo git clone --depth=1 https://github.com/freenetcoder/boost-android.git /usr/local/boost_1_68-android
        - sudo git clone --depth=1 https://github.com/freenetcoder/openssl-android.git /usr/local/Prebuilt-OpenSSL-Android
        - export ANDROID_NDK_HOME=$ANDROID_HOME/ndk-bundle
        - export BOOST_ROOT_ANDROID=/usr/local/boost_1_68-android
        - export OPENSSL_ROOT_DIR_ANDROID=/usr/local/Prebuilt-OpenSSL-Android
        - export PATH=$ANDROID_NDK_HOME:$PATH
      script:
        - cmake -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake -DANDROID_NATIVE_API_LEVEL=$ANDROID_SDK_VERSION -DANDROID_ABI=$ANDROID_ABI -DCMAKE_BUILD_TYPE=$BUILD_TYPE .
        - make wallet-jni -j4
      after_success:
        # extract build version
        - GRIMM_VERSION="$(cat grimm_version.gen)" && rm grimm_version.gen
        - echo GRIMM_VERSION = $GRIMM_VERSION
        - BUILDS_SERVER_PATH=${BUILD_SERVER}/files/$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$BUILD_TYPE/android-$ANDROID_ABI
        - BUILDS_SERVER_LATEST_PATH=${BUILD_SERVER}/files/$TRAVIS_BRANCH/latest/$BUILD_TYPE/android-$ANDROID_ABI
        - tar -cvzf libwallet-jni-$GRIMM_VERSION.tar.gz --directory=$HOME/build/grimm/grimm/android libwallet-jni.so com
        - tar -cvzf libwallet-jni.tar.gz --directory=$HOME/build/grimm/grimm/android libwallet-jni.so com
        - curl --retry 3 --ftp-create-dirs -T libwallet-jni-$GRIMM_VERSION.tar.gz $BUILDS_SERVER_PATH/
        - curl --retry 3 --ftp-create-dirs -T libwallet-jni.tar.gz $BUILDS_SERVER_LATEST_PATH/
        - artifacts upload --target-paths "$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$BUILD_TYPE/android-$ANDROID_ABI/" libwallet-jni-$GRIMM_VERSION.tar.gz
        - artifacts upload --target-paths "$TRAVIS_BRANCH/latest/$BUILD_TYPE/android-$ANDROID_ABI/" libwallet-jni.tar.gz

###############################################################################
# Android ARMv8 Release
###############################################################################

    - os: linux
      language: android
      env:
        - ANDROID_ABI=arm64-v8a
        - BUILD_TYPE=Release
        - ANDROID_SDK_VERSION=23
      android:
        components:
          - tools
          - platform-tools
          - android-23
      install:
        - echo y | sdkmanager "ndk-bundle"
        - wget "https://cmake.org/files/v3.12/cmake-3.12.0-Linux-x86_64.sh"
        - sudo sh cmake-3.12.0-Linux-x86_64.sh --skip-license --prefix=/usr
        - sudo git clone --depth=1 https://github.com/freenetcoder/boost-android.git /usr/local/boost_1_68-android
        - sudo git clone --depth=1 https://github.com/freenetcoder/openssl-android.git /usr/local/Prebuilt-OpenSSL-Android
        - export ANDROID_NDK_HOME=$ANDROID_HOME/ndk-bundle
        - export BOOST_ROOT_ANDROID=/usr/local/boost_1_68-android
        - export OPENSSL_ROOT_DIR_ANDROID=/usr/local/Prebuilt-OpenSSL-Android
        - export PATH=$ANDROID_NDK_HOME:$PATH
      script:
        - cmake -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake -DANDROID_NATIVE_API_LEVEL=$ANDROID_SDK_VERSION -DANDROID_ABI=$ANDROID_ABI -DCMAKE_BUILD_TYPE=$BUILD_TYPE .
        - make wallet-jni -j4
      after_success:
        # extract build version
        - GRIMM_VERSION="$(cat grimm_version.gen)" && rm grimm_version.gen
        - echo GRIMM_VERSION = $GRIMM_VERSION
        - BUILDS_SERVER_PATH=${BUILD_SERVER}/files/$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$BUILD_TYPE/android-$ANDROID_ABI
        - BUILDS_SERVER_LATEST_PATH=${BUILD_SERVER}/files/$TRAVIS_BRANCH/latest/$BUILD_TYPE/android-$ANDROID_ABI
        - tar -cvzf libwallet-jni-$GRIMM_VERSION.tar.gz --directory=$HOME/build/grimm/grimm/android libwallet-jni.so com
        - tar -cvzf libwallet-jni.tar.gz --directory=$HOME/build/grimm/grimm/android libwallet-jni.so com
        - curl --retry 3 --ftp-create-dirs -T libwallet-jni-$GRIMM_VERSION.tar.gz $BUILDS_SERVER_PATH/
        - curl --retry 3 --ftp-create-dirs -T libwallet-jni.tar.gz $BUILDS_SERVER_LATEST_PATH/
        - artifacts upload --target-paths "$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$BUILD_TYPE/android-$ANDROID_ABI/" libwallet-jni-$GRIMM_VERSION.tar.gz
        - artifacts upload --target-paths "$TRAVIS_BRANCH/latest/$BUILD_TYPE/android-$ANDROID_ABI/" libwallet-jni.tar.gz

###############################################################################
# Common part
###############################################################################
before_script:
  - curl -sL https://raw.githubusercontent.com/travis-ci/artifacts/master/install | bash
  - GRIMM_TARGET_SUFFIX="-masternet"
  - GRIMM_DISPLAY_SUFFIX="Masternet"
  - GRIMM_DISPLAY_SUFFIX2="-Masternet"

after_success:
  # deploy using ftp server
  - BUILDS_SERVER_PATH=${BUILD_SERVER}/files/$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$BUILD_TYPE/$OS_FOLDER
  - tar -cvzf grimm-node$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz --directory=$HOME/build/grimm/grimm/grimm grimm-node$GRIMM_TARGET_SUFFIX grimm-node.cfg
  - tar -cvzf grimm-wallet-cli$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz --directory=$HOME/build/grimm/grimm/wallet grimm-wallet$GRIMM_TARGET_SUFFIX grimm-wallet.cfg
  - tar -cvzf wallet-api$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz --directory=$HOME/build/grimm/grimm/wallet wallet-api$GRIMM_TARGET_SUFFIX wallet-api.cfg
  - tar -cvzf explorer-node$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz --directory=$HOME/build/grimm/grimm/explorer explorer-node$GRIMM_TARGET_SUFFIX explorer-node.cfg

  # upload binaries to FTP
  - curl --retry 3 --ftp-create-dirs -T grimm-node$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz $BUILDS_SERVER_PATH/
  - curl --retry 3 --ftp-create-dirs -T grimm-wallet-cli$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz $BUILDS_SERVER_PATH/
  - curl --retry 3 --ftp-create-dirs -T wallet-api$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz $BUILDS_SERVER_PATH/
  - curl --retry 3 --ftp-create-dirs -T explorer-node$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz $BUILDS_SERVER_PATH/
  - curl --retry 3 --ftp-create-dirs -T "$HOME/build/grimm/grimm/$GRIMM_WALLET_UI_IN" "$BUILDS_SERVER_PATH/$GRIMM_WALLET_UI_OUT"

  # upload binaries to FTP, to the latest folder
  - BUILDS_SERVER_LATEST_PATH=${BUILD_SERVER}/files/$TRAVIS_BRANCH/latest/$BUILD_TYPE/$OS_FOLDER
  - curl --retry 3 --ftp-create-dirs -T grimm-node$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz $BUILDS_SERVER_LATEST_PATH/grimm-node$GRIMM_TARGET_SUFFIX.tar.gz
  - curl --retry 3 --ftp-create-dirs -T grimm-wallet-cli$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz $BUILDS_SERVER_LATEST_PATH/grimm-wallet-cli$GRIMM_TARGET_SUFFIX.tar.gz
  - curl --retry 3 --ftp-create-dirs -T wallet-api$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz $BUILDS_SERVER_LATEST_PATH/wallet-api$GRIMM_TARGET_SUFFIX.tar.gz
  - curl --retry 3 --ftp-create-dirs -T explorer-node$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz $BUILDS_SERVER_LATEST_PATH/explorer-node$GRIMM_TARGET_SUFFIX.tar.gz
  - curl --retry 3 --ftp-create-dirs -T "$HOME/build/grimm/grimm/$GRIMM_WALLET_UI_IN" "$BUILDS_SERVER_LATEST_PATH/$GRIMM_WALLET_UI_OUT_VERLESS"

  # prep for deploy to AWS S3
  - cp $HOME/build/grimm/grimm/$GRIMM_WALLET_UI_IN $HOME/build/grimm/grimm/$GRIMM_WALLET_UI_OUT

  # upload binaries to S3
  - artifacts upload --target-paths "$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$BUILD_TYPE/$OS_FOLDER/" grimm-node$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz
  - artifacts upload --target-paths "$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$BUILD_TYPE/$OS_FOLDER/" grimm-wallet-cli$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz
  - artifacts upload --target-paths "$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$BUILD_TYPE/$OS_FOLDER/" wallet-api$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz
  - artifacts upload --target-paths "$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$BUILD_TYPE/$OS_FOLDER/" explorer-node$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz
  - artifacts upload --target-paths "$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$BUILD_TYPE/$OS_FOLDER/" $HOME/build/grimm/grimm/$GRIMM_WALLET_UI_OUT

  # prep for deploy to AWS S3, latest folder
  - cp grimm-node$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz grimm-node$GRIMM_TARGET_SUFFIX.tar.gz
  - cp grimm-wallet-cli$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz grimm-wallet-cli$GRIMM_TARGET_SUFFIX.tar.gz
  - cp wallet-api$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz wallet-api$GRIMM_TARGET_SUFFIX.tar.gz
  - cp explorer-node$GRIMM_TARGET_SUFFIX-$GRIMM_VERSION.tar.gz explorer-node$GRIMM_TARGET_SUFFIX.tar.gz
  - cp $HOME/build/grimm/grimm/$GRIMM_WALLET_UI_IN $HOME/build/grimm/grimm/$GRIMM_WALLET_UI_OUT_VERLESS

  # upload binaries to S3, to the latest folder
  - artifacts upload --target-paths "$TRAVIS_BRANCH/latest/$BUILD_TYPE/$OS_FOLDER/" grimm-node$GRIMM_TARGET_SUFFIX.tar.gz
  - artifacts upload --target-paths "$TRAVIS_BRANCH/latest/$BUILD_TYPE/$OS_FOLDER/" grimm-wallet-cli$GRIMM_TARGET_SUFFIX.tar.gz
  - artifacts upload --target-paths "$TRAVIS_BRANCH/latest/$BUILD_TYPE/$OS_FOLDER/" wallet-api$GRIMM_TARGET_SUFFIX.tar.gz
  - artifacts upload --target-paths "$TRAVIS_BRANCH/latest/$BUILD_TYPE/$OS_FOLDER/" explorer-node$GRIMM_TARGET_SUFFIX.tar.gz
  - artifacts upload --target-paths "$TRAVIS_BRANCH/latest/$BUILD_TYPE/$OS_FOLDER/" $HOME/build/grimm/grimm/$GRIMM_WALLET_UI_OUT_VERLESS

notifications:
  email:
    - big.romanov@gmail.com
